version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bpo-validation-backend
    restart: unless-stopped
    expose:
      - "8080"
    volumes:
      - data:/data
      - ./backend/migrations:/app/migrations
    environment:
      - DB_PATH=/data/auth.db
      - PORT=8080
      - CORS_ORIGINS=http://nginx
      - CSV_PATH=/root/data/bpo_inconclusive_provider_data_sample.csv
      - SKIP_DATA_LOAD=false
    networks:
      - bpo-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bpo-validation-frontend
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://nginx/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - bpo-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: bpo-validation-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - bpo-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  data:
    driver: local

networks:
  bpo-network:
    driver: bridge